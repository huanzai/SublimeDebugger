{
  "contributions": {
    "settings": [
      {
        "schema": {
          "$id": "sublime://settings/debugger",
          "definitions": {
            "type": {
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of configuration.",
                  "enum": [
                    "lldb",
                    "gdb",
                    "chrome",
                    "node",
                    "msedge",
                    "debugpy",
                    "python",
                    "java",
                    "go",
                    "php",
                    "rdbg",
                    "ruby",
                    "ruby-debug",
                    "elixir",
                    "mix_task",
                    "lua-local",
                    "lua",
                    "firefox",
                    "mock",
                    "sublime",
                    "emulicious-debugger"
                  ]
                }
              },
              "required": [
                "type"
              ]
            },
            "type_installed": {
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of configuration.",
                  "enum": [
                    "lua"
                  ],
                  "errorMessage": "This adapter is not installed, install this adapter to get completions"
                }
              },
              "required": [
                "type"
              ]
            },
            "lua": {
              "properties": {
                "request": {
                  "type": "string",
                  "description": "Request type of configuration.",
                  "enum": [
                    "attach",
                    "launch"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name of configuration which appears in the launch configuration drop down menu."
                }
              },
              "required": [
                "type",
                "name",
                "request"
              ]
            },
            "lua.attach": {
              "properties": {
                "address": {
                  "markdownDescription": "Debugger address.\n1. IPv4 e.g. `127.0.0.1:4278`\n2. IPv6 e.g. `[::1]:4278`\n3. Unix domain socket e.g. `@c:\\\\unix.sock`",
                  "type": "string"
                },
                "client": {
                  "default": true,
                  "markdownDescription": "Choose whether to `connect` or `listen`.",
                  "type": "boolean"
                },
                "inject": {
                  "default": "hook",
                  "enum": [
                    "none",
                    "hook"
                  ],
                  "markdownDescription": "How to inject debugger.",
                  "type": "string"
                },
                "luaVersion": {
                  "default": "lua54",
                  "enum": [
                    "lua51",
                    "lua52",
                    "lua53",
                    "lua54",
                    "lua-latest",
                    "luajit"
                  ],
                  "markdownDescription": "Default lua version.",
                  "type": "string"
                },
                "outputCapture": {
                  "default": [],
                  "items": {
                    "enum": [
                      "print",
                      "io.write",
                      "stdout",
                      "stderr"
                    ]
                  },
                  "markdownDescription": "From where to capture output messages: print or stdout/stderr streams.",
                  "type": "array"
                },
                "pathFormat": {
                  "default": "path",
                  "enum": [
                    "path",
                    "linuxpath"
                  ],
                  "markdownDescription": "Path format",
                  "type": "string"
                },
                "processId": {
                  "default": "${command:pickProcess}",
                  "markdownDescription": "Id of process to attach to.",
                  "type": "string"
                },
                "processName": {
                  "default": "lua.exe",
                  "markdownDescription": "Name of process to attach to.",
                  "type": "string"
                },
                "skipFiles": {
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "markdownDescription": "An array of glob patterns for files to skip when debugging.",
                  "type": "array"
                },
                "sourceCoding": {
                  "default": "utf8",
                  "enum": [
                    "utf8",
                    "ansi"
                  ],
                  "markdownDescription": "Source encoding.",
                  "type": "string"
                },
                "sourceFormat": {
                  "default": "path",
                  "enum": [
                    "path",
                    "string",
                    "linuxpath"
                  ],
                  "markdownDescription": "Source format",
                  "type": "string"
                },
                "sourceMaps": {
                  "default": [
                    [
                      "./*",
                      "${workspaceFolder}/*"
                    ]
                  ],
                  "markdownDescription": "The source path of the remote host and the source path of local.",
                  "type": "array"
                },
                "stopOnEntry": {
                  "default": false,
                  "markdownDescription": "Automatically stop after entry.",
                  "type": "boolean"
                },
                "stopOnThreadEntry": {
                  "default": true,
                  "markdownDescription": "Automatically stop after thread entry.",
                  "type": "boolean"
                },
                "useWSL": {
                  "default": true,
                  "description": "Use Windows Subsystem for Linux.",
                  "type": "boolean"
                },
                "pre_debug_task": {
                  "type": "string",
                  "description": "Name of task to run before debugging starts"
                },
                "post_debug_task": {
                  "type": "string",
                  "description": "name of task to run after debugging ends"
                },
                "osx": {
                  "$ref": "sublime://settings/debugger#/definitions/lua.attach",
                  "description": "MacOS specific configuration attributes"
                },
                "windows": {
                  "$ref": "sublime://settings/debugger#/definitions/lua.attach",
                  "description": "Windows specific configuration attributes"
                },
                "linux": {
                  "$ref": "sublime://settings/debugger#/definitions/lua.attach",
                  "description": "Linux specific configuration attributes"
                }
              },
              "type": "object"
            },
            "lua.launch": {
              "properties": {
                "address": {
                  "markdownDescription": "Debugger address.\n1. IPv4 e.g. `127.0.0.1:4278`\n2. IPv6 e.g. `[::1]:4278`\n3. Unix domain socket e.g. `@c:\\\\unix.sock`",
                  "type": "string"
                },
                "arg": {
                  "default": [],
                  "markdownDescription": "Command line argument, arg[1] ... arg[n]",
                  "type": "array"
                },
                "arg0": {
                  "default": [],
                  "markdownDescription": "Command line argument, arg[-n] ... arg[0]",
                  "type": [
                    "string",
                    "array"
                  ]
                },
                "client": {
                  "default": true,
                  "markdownDescription": "Choose whether to `connect` or `listen`.",
                  "type": "boolean"
                },
                "console": {
                  "default": "integratedTerminal",
                  "enum": [
                    "internalConsole",
                    "integratedTerminal",
                    "externalTerminal"
                  ],
                  "enummarkdownDescriptions": [
                    "VS Code debug console (input stream not supported).",
                    "VS Code integrated terminal.",
                    "External terminal that can be configured in user settings."
                  ],
                  "markdownDescription": "The specified console to launch the program.",
                  "type": "string"
                },
                "cpath": {
                  "default": "${workspaceFolder}/?.dll",
                  "markdownDescription": "Search path for native libraries",
                  "type": [
                    "string",
                    "array",
                    "null"
                  ]
                },
                "cwd": {
                  "default": "${workspaceFolder}",
                  "markdownDescription": "Working directory at program startup",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "env": {
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "default": {
                    "PATH": "${workspaceFolder}"
                  },
                  "markdownDescription": "Environment variables passed to the program. The value `null` removes thevariable from the environment.",
                  "type": "object"
                },
                "inject": {
                  "default": "hook",
                  "enum": [
                    "none",
                    "hook"
                  ],
                  "markdownDescription": "How to inject debugger.",
                  "type": "string"
                },
                "luaArch": {
                  "default": "x86_64",
                  "enum": [
                    "x86_64",
                    "x86"
                  ],
                  "markdownDescription": "Default lua arch.",
                  "type": "string"
                },
                "luaVersion": {
                  "default": "lua54",
                  "enum": [
                    "lua51",
                    "lua52",
                    "lua53",
                    "lua54",
                    "lua-latest",
                    "luajit"
                  ],
                  "markdownDescription": "Default lua version.",
                  "type": "string"
                },
                "luaexe": {
                  "default": "${workspaceFolder}/lua.exe",
                  "markdownDescription": "Absolute path to the lua exe.",
                  "type": "string"
                },
                "outputCapture": {
                  "default": [],
                  "items": {
                    "enum": [
                      "print",
                      "io.write",
                      "stdout",
                      "stderr"
                    ]
                  },
                  "markdownDescription": "From where to capture output messages: print or stdout/stderr streams.",
                  "type": "array"
                },
                "path": {
                  "default": "${workspaceFolder}/?.lua",
                  "markdownDescription": "Search path for Lua programs",
                  "type": [
                    "string",
                    "array",
                    "null"
                  ]
                },
                "pathFormat": {
                  "default": "path",
                  "enum": [
                    "path",
                    "linuxpath"
                  ],
                  "markdownDescription": "Path format",
                  "type": "string"
                },
                "program": {
                  "default": "${workspaceFolder}/main.lua",
                  "markdownDescription": "Lua program to debug - set this to the path of the script",
                  "type": "string"
                },
                "runtimeArgs": {
                  "default": "${workspaceFolder}/main.lua",
                  "markdownDescription": "Arguments passed to the runtime executable.",
                  "type": [
                    "string",
                    "array",
                    "null"
                  ]
                },
                "runtimeExecutable": {
                  "default": "${workspaceFolder}/lua.exe",
                  "markdownDescription": "Runtime to use. Either an absolute path or the name of a runtime availableon the PATH.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "skipFiles": {
                  "default": [],
                  "items": {
                    "type": "string"
                  },
                  "markdownDescription": "An array of glob patterns for files to skip when debugging.",
                  "type": "array"
                },
                "sourceCoding": {
                  "default": "utf8",
                  "enum": [
                    "utf8",
                    "ansi"
                  ],
                  "markdownDescription": "Source encoding.",
                  "type": "string"
                },
                "sourceFormat": {
                  "default": "path",
                  "enum": [
                    "path",
                    "string",
                    "linuxpath"
                  ],
                  "markdownDescription": "Source format",
                  "type": "string"
                },
                "sourceMaps": {
                  "default": [
                    [
                      "./*",
                      "${workspaceFolder}/*"
                    ]
                  ],
                  "markdownDescription": "The source path of the remote host and the source path of local.",
                  "type": "array"
                },
                "stopOnEntry": {
                  "default": false,
                  "markdownDescription": "Automatically stop after entry.",
                  "type": "boolean"
                },
                "stopOnThreadEntry": {
                  "default": true,
                  "markdownDescription": "Automatically stop after thread entry.",
                  "type": "boolean"
                },
                "useWSL": {
                  "default": true,
                  "description": "Use Windows Subsystem for Linux.",
                  "type": "boolean"
                },
                "pre_debug_task": {
                  "type": "string",
                  "description": "Name of task to run before debugging starts"
                },
                "post_debug_task": {
                  "type": "string",
                  "description": "name of task to run after debugging ends"
                },
                "osx": {
                  "$ref": "sublime://settings/debugger#/definitions/lua.launch",
                  "description": "MacOS specific configuration attributes"
                },
                "windows": {
                  "$ref": "sublime://settings/debugger#/definitions/lua.launch",
                  "description": "Windows specific configuration attributes"
                },
                "linux": {
                  "$ref": "sublime://settings/debugger#/definitions/lua.launch",
                  "description": "Linux specific configuration attributes"
                }
              },
              "type": "object"
            },
            "debugger_configuration": {
              "defaultSnippets": [
                {
                  "body": {
                    "arg": [],
                    "name": "${1:launch}",
                    "program": "^\"\\${workspaceFolder}/${2:main.lua}\"",
                    "request": "launch",
                    "stopOnEntry": true,
                    "type": "lua"
                  },
                  "description": "A new configuration for launching a lua debug program",
                  "label": "Lua Debug: Launch Script"
                },
                {
                  "body": {
                    "address": "127.0.0.1:4278",
                    "name": "${1:attach}",
                    "request": "attach",
                    "stopOnEntry": true,
                    "type": "lua"
                  },
                  "description": "A new configuration for attaching a lua debug program",
                  "label": "Lua Debug: Attach"
                },
                {
                  "body": {
                    "name": "${1:launch process}",
                    "request": "launch",
                    "runtimeArgs": "^\"\\${workspaceFolder}/${2:main.lua}\"",
                    "runtimeExecutable": "^\"\\${workspaceFolder}/lua.exe\"",
                    "stopOnEntry": true,
                    "type": "lua"
                  },
                  "description": "A new configuration for launching a lua process",
                  "label": "Lua Debug: Launch Process"
                },
                {
                  "body": {
                    "name": "${1:attach}",
                    "processId": "^\"\\${command:pickProcess}\"",
                    "request": "attach",
                    "stopOnEntry": true,
                    "type": "lua"
                  },
                  "description": "A new configuration for attaching a lua debug program",
                  "label": "Lua Debug: Attach Process"
                }
              ],
              "allOf": [
                {
                  "if": {
                    "$ref": "sublime://settings/debugger#/definitions/type"
                  },
                  "then": {
                    "$ref": "sublime://settings/debugger#/definitions/type_installed"
                  },
                  "else": {
                    "$ref": "sublime://settings/debugger#/definitions/type"
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "lua"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "then": {
                    "$ref": "sublime://settings/debugger#/definitions/lua"
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "lua"
                      },
                      "request": {
                        "const": "attach"
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "request"
                    ]
                  },
                  "then": {
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "$ref": "sublime://settings/debugger#/definitions/type"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/lua"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/lua.attach"
                      }
                    ]
                  }
                },
                {
                  "if": {
                    "properties": {
                      "type": {
                        "const": "lua"
                      },
                      "request": {
                        "const": "launch"
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "request"
                    ]
                  },
                  "then": {
                    "unevaluatedProperties": false,
                    "allOf": [
                      {
                        "$ref": "sublime://settings/debugger#/definitions/type"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/lua"
                      },
                      {
                        "$ref": "sublime://settings/debugger#/definitions/lua.launch"
                      }
                    ]
                  }
                }
              ]
            },
            "debugger_compound": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of compound which appears in the launch configuration drop down menu."
                },
                "configurations": {
                  "type": "array",
                  "description": "Names of configurations that compose this compound configuration",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "configurations"
              ]
            },
            "debugger_task": {
              "allOf": [
                {
                  "$ref": "sublime://schemas/sublime-build"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of task"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            }
          }
        }
      },
      {
        "file_patterns": [
          "/*.sublime-project"
        ],
        "schema": {
          "properties": {
            "debugger_configurations": {
              "description": "Debugger Configurations",
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_configuration"
              }
            },
            "debugger_tasks": {
              "description": "Debugger Tasks",
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_task"
              }
            },
            "debugger_compounds": {
              "description": "Debugger Compounds",
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_compound"
              }
            }
          }
        }
      },
      {
        "file_patterns": [
          "Debugger.sublime-settings"
        ],
        "schema": {
          "additionalProperties": false,
          "properties": {
            "open_at_startup": {
              "type": "boolean",
              "description": "Open the debugger automatically when a project that is set up for debugging"
            },
            "always_keep_visible": {
              "type": "boolean",
              "description": "Always keep the debugger panel visible"
            },
            "font_size": {
              "type": [
                "number",
                "null"
              ],
              "description": "Change the font size of the debugger ui. Defaults to the font size in your preferences."
            },
            "internal_font_scale": {
              "type": "number",
              "description": "Expected values of around 0.95 to 1.05. Only change this if the text/images/content are not aligning correctly within the panels (could cause the last panel to be clipped)."
            },
            "internal_width_modifier": {
              "type": "number",
              "description": "Expected values of around 0 to -5. Only change this if the size of the panels is too large and the last panel is cropped off (adjust internal_font_scale first if text/images/content are not aligned correctly). Negative values make the panels smaller. Postive make them bigger."
            },
            "external_terminal": {
              "type": "string",
              "description": "Which external terminal should be used when an adapter requests an external terminal"
            },
            "minimum_console_height": {
              "type": "number",
              "description": "Controls the minimum height of the debugger output panels in lines"
            },
            "development": {
              "type": "boolean",
              "description": "Additional console logs and some new features are locked behind this flag"
            },
            "node": {
              "type": [
                "string",
                "null"
              ],
              "description": "Sets a specific path for node if not set adapters that require node to run will use whatever is in your path"
            },
            "integrated_output_panels": {
              "type": [
                "object",
                "array"
              ],
              "description": "Output panels outside of the debugger can be integrated into the tabbed debugger interface (note: In some cases output panels may cause issues and not work correctly depending on who owns them)"
            },
            "installed_packages": {
              "type": [
                "object",
                "array"
              ],
              "description": "Some debug adapters require certain packages to be installed via package control. If you have installed these package outside of package control then you can add them to this list and they will be treated as if they are installed."
            },
            "global_debugger_configurations": {
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_configuration"
              },
              "description": "Global debugger configurations that are accessible from every project"
            },
            "global_debugger_tasks": {
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_task"
              },
              "description": "Global debugger tasks that are accessible from every project"
            },
            "global_debugger_compounds": {
              "type": "array",
              "items": {
                "$ref": "sublime://settings/debugger#/definitions/debugger_compound"
              },
              "description": "Global debugger compounds that are accessible from every project"
            },
            "github_personal_access_token": {
              "type": [
                "string",
                "null"
              ],
              "description": "Personal access token used for github api requests. If you are testing installing adapters you may need to set this to have higher api limits if you are getting 429 errors."
            },
            "lldb_display_format": {
              "type": "string",
              "description": ""
            },
            "lldb_dereference_pointers": {
              "type": "boolean",
              "description": ""
            },
            "lldb_library": {
              "type": [
                "string",
                "null"
              ],
              "description": "Which lldb library to use"
            },
            "go_dlv": {
              "type": [
                "string",
                "null"
              ],
              "description": "Sets a specific path for dlv if not set go will use whatever is in your path"
            }
          }
        }
      }
    ]
  }
}